name: Build Ionic Vue for Android

env:
  WEB_APP_URL: http://35.240.198.68/api/
  FTP_HOST: 35.240.198.68
  FTP_USERNAME: ftp_wmmns
  FTP_PASSWORD: '@_Cerezo0129'

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Build Ionic Vue app
        run: npm run build

      - name: Install Capacitor CLI
        run: npm install -g @capacitor/cli

      - name: Sync Capacitor
        run: npx cap sync

      - name: Update Android Version in build.gradle
        run: |
          # Extract the tag version from the GitHub ref
          TAG_VERSION=${GITHUB_REF##*/}
          # Remove the "v" prefix if present
          TAG_VERSION=${TAG_VERSION#v}
          # Update the versionCode and versionName in build.gradle
          sed -i "s/versionCode [0-9]*/versionCode ${{ github.run_number }}/" android/app/build.gradle
          sed -i "s/versionName \"[^\"]*\"/versionName \"${TAG_VERSION}\"/" android/app/build.gradle

      - name: Install Java 17
        run: sudo apt-get install openjdk-17-jdk

      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV

      - name: Fix Gradle Permissions
        run: chmod +x android/gradlew

      - name: Decode Keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/app/my-release-key.keystore
        shell: bash

      - name: Configure Signing in Gradle
        run: |
          mkdir -p android/app/src/main/res
          echo "android {
            signingConfigs {
                release {
                storeFile file('my-release-key.keystore')
                storePassword '${{ secrets.KEYSTORE_PASSWORD }}'
                keyAlias '${{ secrets.KEY_ALIAS }}'
                keyPassword '${{ secrets.KEY_PASSWORD }}'
                }
            }
            buildTypes {
              release {
              signingConfig signingConfigs.release
              }
            }
          }" >> android/app/build.gradle

      - name: Build Android
        run: |
          cd android
          ./gradlew assembleRelease

      - name: List APK Files
        run: |
          cd android/app/build/outputs/apk/release
          ls -l
    
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: android-apk
          path: android/app/build/outputs/apk/release/app-release.apk

